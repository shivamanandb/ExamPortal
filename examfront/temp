import React, { useEffect, useState } from 'react'
import { useForm } from 'react-hook-form'
import { useSelector } from 'react-redux'
import { addQuiz } from '../../services/operations/quizAPI'
import { Button, Card, FormControl, InputLabel, ListItemText, MenuItem, Select, Switch, TextField, Typography, alpha } from '@mui/material'
import { pink } from '@mui/material/colors'
import { getAllCategories } from '../../services/operations/categoryAPI'

export const AddQuiz = () => {

    const { register, handleSubmit, reset, formState: { errors, isSubmitSuccessful } } = useForm()
    const { token } = useSelector((state) => state.auth)
    const [categories, setCategories] = useState([])

    const getCategories = async (token) => {
          try {
            const res = await getAllCategories(token);
            setCategories(res)
            // console.log("DATA:", res)
          } catch (error) {
            console.log("fetching Categories error")
          }
        };
        
        useEffect(() => {
          getCategories(token)
        }, [])

    const formSubmit = (data) => {
        addQuiz(data, token)
    }


    useEffect(() => {
        if (isSubmitSuccessful) {
            reset({
                title: "",
                active: "",
                description: "",
                maxMarks: "",
                numberOfQuestions: "",
                category: ""
            })
        }
    })

    return (
        <div>
            <Card className='flex flex-col gap-4'>
                <Typography variant="subtitle1" className='p-4' component="div" style={{ fontWeight: 'bold' }}>
                    <div className='text-2xl'> Add New Category</div>
                </Typography>

                <ListItemText className='p-7'>
                    <div>
                        <form className='flex flex-col items-center justify-center gap-6'
                            onSubmit={handleSubmit(formSubmit)}>
                            <TextField className='w-8/12 mx-auto'
                                size='small'
                                id="text-filled"
                                label="Title"
                                name='title'
                                variant="filled"
                                color='secondary'
                                placeholder='Enter Title here'
                                {...register("title", { required: true })}
                            />
                            {errors.title && (
                                <span className="-mt-3 text-[12px] text-yellow-900">
                                    Please enter the Title.
                                </span>
                            )}
                            <TextField rows={4}
                                className='w-8/12'
                                size='small'
                                multiline
                                id="text-filled"
                                label="Description"
                                name='description'
                                color='secondary'
                                variant="filled"
                                placeholder='Enter Description here'
                                {...register("description", { required: true })}
                            />

                            <div className='flex flex-row justify-between w-8/12 gap-3'>
                                <TextField
                                    className='w-6/12'
                                    size='small'
                                    id="text-filled"
                                    label="Maximum Marks"
                                    name='maxMarks'
                                    color='secondary'
                                    variant="filled"
                                    placeholder='Enter Maximum Marks'
                                    {...register("description", { required: true })}
                                />
                                <TextField
                                    className='w-6/12'
                                    size='small'
                                    id="text-filled"
                                    label="Number of Questions"
                                    name='numberOfQuestions'
                                    color='secondary'
                                    variant="filled"
                                    placeholder='Enter Number of Questions'
                                    {...register("description", { required: true })}
                                />
                            </div>

                            {errors.description && (
                                <span className="-mt-3 text-[12px] text-yellow-900">
                                    Please enter the Description.
                                </span>
                            )}

                            <div className='flex items-center justify-start'>
                                <Switch
                                    // checked={checked}
                                    // onChange={handleChange}
                                    inputProps={{ 'aria-label': 'controlled' }}
                                    color='warning'
                                /> Publish Status
                            </div>
                            <FormControl className='w-8/12' variant="filled" sx={{m:1}}>
                                <InputLabel color='secondary' id="demo-simple-select-filled-label">Category</InputLabel>
                                <Select
                                    labelId="demo-simple-select-filled-label"
                                    id="demo-simple-select-filled"
                                    size='small'
                                    color='secondary'
                                //   value={age}
                                //   onChange={handleChange}
                                >
                                    <MenuItem value="">
                                        <em>None</em>
                                    </MenuItem>
                                    {
                                        categories.map((c) => (
                                            <MenuItem key={c.cid}>{c.title}</MenuItem>     
                                        ))
                                    }
                                    <MenuItem> {} </MenuItem>
                                </Select>
                            </FormControl>

                            <div className='flex items-center justify-center gap-10 mt-5'>
                                <Button type='submit' variant="contained" color="success">
                                    ADD
                                </Button>
                            </div>
                        </form>

                    </div>
                </ListItemText>

            </Card>
        </div>
    )
}
